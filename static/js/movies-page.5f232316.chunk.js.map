{"version":3,"sources":["utils/axios.js","views/MoviesPage.js"],"names":["instance","axios","create","baseURL","params","api_key","MoviesPage","state","query","movies","page","makeRequest","value","a","URLSearchParams","language","get","toString","response","data","handleChange","evt","setState","target","handleSubmit","preventDefault","props","history","push","search","results","this","location","has","locationQuery","onSubmit","type","onChange","map","movie","to","pathname","id","from","original_title","Component"],"mappings":"yIAAA,YAEMA,EAFN,OAEiBC,EAAMC,OAAO,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIEL,O,iICLTM,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,OAAQ,GACRC,KAAM,G,EAcRC,Y,uCAAc,WAAOD,EAAME,GAAb,iBAAAC,EAAA,6DACNT,EAAS,IAAIU,gBAAgB,CACjCJ,KAAMA,EACNF,MAAOI,EACPG,SAAU,UAJA,SAOWd,IAAMe,IAAN,uBAA0BZ,EAAOa,aAP5C,cAONC,EAPM,yBASLA,EAASC,MATJ,2C,0DAYdC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEd,MAAOa,EAAIE,OAAOX,S,EAGpCY,a,uCAAe,WAAMH,GAAN,eAAAR,EAAA,6DACbQ,EAAII,iBAEJ,EAAKC,MAAMC,QAAQC,KAAK,CACtBC,OAAO,UAAD,OAAY,EAAKtB,MAAMC,SAJlB,SAOM,EAAKG,YAAY,EAAKJ,MAAMG,KAAM,EAAKH,MAAMC,OAPnD,OAOPW,EAPO,OAQb,EAAKG,SAAS,CAAEb,OAAQU,EAAKW,UARhB,2C,oJA3Bf,kCAAAjB,EAAA,yDACQgB,EAASE,KAAKL,MAAMM,SAASH,SAC7BzB,EAAS,IAAIU,gBAAgBe,IAExBI,IAAI,SAJjB,uBAKUC,EAAgB9B,EAAOY,IAAI,SALrC,SAMuBe,KAAKpB,YAAYoB,KAAKxB,MAAMG,KAAMwB,GANzD,OAMUf,EANV,OAOIY,KAAKT,SAAS,CAAEb,OAAQU,EAAKW,UAPjC,gD,0EAsCA,WAAU,IAAD,OACP,EAA0BC,KAAKxB,MAAvBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEf,OACE,qCACE,uBAAM0B,SAAUJ,KAAKP,aAArB,UACE,0CAEE,uBACEY,KAAK,OACLxB,MAAOJ,EACP6B,SAAUN,KAAKX,kBAGnB,wBAAQgB,KAAK,SAAb,uBAGD3B,GACC,6BACGA,EAAO6B,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BnC,MAAO,CACLoC,KAAM,CACJd,OAAO,GAAD,OAAK,EAAKH,MAAMM,SAASH,QAC/BY,SAAU,EAAKf,MAAMM,SAASS,YANtC,SAWGF,EAAMK,kBAZFL,EAAMG,gB,GAjEJG,aAwFVvC","file":"static/js/movies-page.5f232316.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c2a3095b3c93af2cd3988a9dd6f9ca00',\n  },\n});\n\nexport default instance;\n","import React, { Component } from 'react';\nimport axios from '../utils/axios';\nimport { Link } from 'react-router-dom';\n\nclass MoviesPage extends Component {\n  state = {\n    query: '',\n    movies: [],\n    page: 1,\n  };\n\n  async componentDidMount() {\n    const search = this.props.location.search;\n    const params = new URLSearchParams(search);\n\n    if (params.has('query')) {\n      const locationQuery = params.get('query');\n      const data = await this.makeRequest(this.state.page, locationQuery);\n      this.setState({ movies: data.results });\n    }\n  }\n\n  makeRequest = async (page, value) => {\n    const params = new URLSearchParams({\n      page: page,\n      query: value,\n      language: 'en-US',\n    });\n\n    const response = await axios.get(`search/movie?${params.toString()}`);\n\n    return response.data;\n  };\n\n  handleChange = evt => {\n    this.setState({ query: evt.target.value });\n  };\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n\n    this.props.history.push({\n      search: `?query=${this.state.query}`,\n    });\n\n    const data = await this.makeRequest(this.state.page, this.state.query);\n    this.setState({ movies: data.results });\n  };\n\n  render() {\n    const { query, movies } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Movie\n            <input\n              type=\"text\"\n              value={query}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <button type=\"submit\">search</button>\n        </form>\n\n        {movies && (\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link\n                  to={{\n                    pathname: `/movies/${movie.id}`,\n                    state: {\n                      from: {\n                        search: `${this.props.location.search}`,\n                        pathname: this.props.location.pathname,\n                      },\n                    },\n                  }}\n                >\n                  {movie.original_title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n  }\n}\n\nexport default MoviesPage;\n"],"sourceRoot":""}